readings2[readings2$DAY >= minDate & readings2$DAY <= maxDate, ], times = 10)
sum2 <- ss2[, list(total = count(VALUE),
exceed = count(VALUE >= 0.075)), by = "STATE_CODE"]
sum2 <- ss2[, list(total = count(VALUE),
), by = "STATE_CODE"]
sum2 <- ss2[, list(total = count(VALUE),
), by = "STATE_CODE"]
sum2 <- ss2[, list(total = count(VALUE)), by = "STATE_CODE"]
sum2 <- ss2[,  by = "STATE_CODE"]
sum2 <- ss2[, list(count = n(), by = "STATE_CODE"]
sum2 <- ss2[, list(count = n()), by = "STATE_CODE"]
sum2 <- ss2[, list(count = nrow()), by = "STATE_CODE"]
sum2 <- ss2[, list(count = nrow(ss2)), by = "STATE_CODE"]
View(sum2)
sum2 <- ss2[, list(count = length(VALUE)), by = "STATE_CODE"]
View(sum2)
sum2 <- ss2[, list(count = length(VALUE), exceed = length(VALUE > 0.075)), by = "STATE_CODE"]
View(sum2)
sum2 <- ss2[, list(count = length(VALUE), exceed = length(VALUE >= 0.075)), by = "STATE_CODE"]
sum2 <- ss2[, list(count = length(VALUE), exceed = sum(VALUE >= 0.075)), by = "STATE_CODE"]
load("data/readings.rda")
readings <- readings[, -c(11,12,13)]
readings2 <- as.data.table(readings)
setkey(readings2, STATE_CODE, DAY)
save(readings, file = "data/readings.rda")
load("data/states.rda")
load("data/readings.rda")
ss2 <- readings2[readings2$DAY >= minDate & readings2$DAY <= maxDate, ]
sum2 <- ss2[, list(count = length(VALUE), exceed = sum(VALUE >= 0.075)), by = "STATE_CODE"]
load("data/states.rda")
load("data/readings.rda")
ss2 <- readings[readings$DAY >= minDate & readings$DAY <= maxDate, ]
sum2 <- ss2[, list(count = length(VALUE), exceed = sum(VALUE >= 0.075)), by = "STATE_CODE"]
shiny::runApp()
shiny::runApp()
shiny::runApp()
readings <- as.data.table(readings)
setkey(readings, c("STATE_CODE", "DAY"))
setkey(readings, STATE_CODE, DAY)
save(readings, file = "data/readings.rda")
shiny::runApp()
View(tD)
View(d)
shiny::runApp()
shiny::runApp()
shinyapps::deployApp()
shiny::runApp()
shiny::runApp()
shinyapps::deployApp()
shiny::runApp()
shiny::runApp()
View(data2)
shiny::runApp()
shinyapps::deployApp()
downloadButton("downloadData")
downloadButton("downloadData", "Download Table")
x <- downloadButton("downloadData", "Download Table")
x
shiny::runApp()
shinyapps::deployApp()
x <- sliderInput("seasonLength", "Length of Season", min = 1, max = 180, value = 90)
x
shiny::runApp()
sl <- input$seasonLength
sl=90
sd <- as.Date("2004-03-01")
ed <- sd + 180
ed <- sd + sl
s <- as.numeric(format(sd, "%m%d"))
e <- as.numeric(format(ed, "%m%d"))
sub <- data[data$DAY >= s & data$DAY <= e, ]
data <- readings
sub <- data[data$DAY >= s & data$DAY <= e, ]
std = 0.075
exceed <- sum(sub$VALUE > std)
win <- list(startDate = sd, endDate = ed, count = NA)
win <- list(startDate = sd, endDate = ed, count = 0)
win <- list(list(startDate = sd, endDate = ed, count = 0))
shiny::runApp()
as.POSIXct(ed)
shiny::runApp()
shiny::runApp()
shinyapps::deployApp()
shiny::runApp()
shinyapps::deployApp()
load("data/states.rda")
load("data/readings.rda")
View(readings)
x <- read.csv("C:/R/o3exceedData/ozone_raw.csv")
library(data.table)
y <- read.csv("C:/R/o3exceedData/ozone.txt", comment.char = "", stringsAsFactors = FALSE))
y <- read.csv("C:/R/o3exceedData/ozone.txt", comment.char = "", stringsAsFactors = FALSE)
colnames(y)[1] <- "STATE.CODE"
y <- y[(y$MAX.VALUE >= 0.065 | y$NUM.DAILY.OBS >= 18), c("STATE.CODE", "COUNTY.CODE", "SITE.ID", "POC", "COLLECTION.DATE", "NUM.DAILY.OBS", "MAX.VALUE")]
load("data/readings.rda")
colnames(y) <- c("STATE_CODE", "COUNTY_CODE", "SITE_ID", "POC", "DATE", "COUNT", "VALUE")
y$DATE <- as.Date(y$DATE, format= "%Y%m%d")
y$DATE <- as.Date(as.character(y$DATE), format= "%Y%m%d")
y$YEAR <- as.numeric(format(y$DATE, "%Y"))
y$MONTH <- as.numeric(format(y$DATE, "%m"))
y$DAY <- as.numeric(format(y$DATE, "%m%d"))
readings <- as.data.table(y)
setkey(readings, STATE_CODE, DAY)
save(readings, filename = "data/readings.rda")
save(readings, file = "data/readings.rda")
shiny::runApp()
y$STATE_CODE <- as.numeric(y$STATE_CODE)
unique(y$STATE_CODE)
library(data.table)
raw_data_file <- "C:/R/o3exceedData/ozone.txt"
y <- read.csv(raw_data_file, comment.char = "", stringsAsFactors = FALSE)
tail(y)
y <- y[seq(nrow(y)-1), ]
tail(y)
colnames(y)[1] <- "STATE.CODE"
y <- y[(y$MAX.VALUE >= 0.065 | y$NUM.DAILY.OBS >= 18), c("STATE.CODE", "COUNTY.CODE", "SITE.ID", "POC", "COLLECTION.DATE", "NUM.DAILY.OBS", "MAX.VALUE")]
colnames(y) <- c("STATE_CODE", "COUNTY_CODE", "SITE_ID", "POC", "DATE", "COUNT", "VALUE")
y$STATE_CODE <- as.numeric(y$STATE_CODE)
y$DATE <- as.Date(as.character(y$DATE), format= "%Y%m%d")
y$YEAR <- as.numeric(format(y$DATE, "%Y"))
y$MONTH <- as.numeric(format(y$DATE, "%m"))
y$DAY <- as.numeric(format(y$DATE, "%m%d"))
readings <- as.data.table(y)
setkey(readings, STATE_CODE, DAY)
save(readings, file = "data/readings.rda")
load("data/readings.rda")
readings <- as.data.table(y)
setkey(readings, STATE_CODE, DAY)
unique(readings$STATE_CODE
)
View(readings)
unique(y$STATE_CODE)
y <- read.csv(raw_data_file, comment.char = "", stringsAsFactors = FALSE)
y <- y[seq(nrow(y)-1), ]
colnames(y)[1] <- "STATE.CODE"
unique(y$STATE.CODE)
y <- y[, c("STATE.CODE", "COUNTY.CODE", "SITE.ID", "POC", "COLLECTION.DATE", "NUM.DAILY.OBS", "MAX.VALUE")]
colnames(y) <- c("STATE_CODE", "COUNTY_CODE", "SITE_ID", "POC", "DATE", "COUNT", "VALUE")
unique(y$STATE_CODE)
y$STATE_CODE <- as.numeric(y$STATE_CODE)
unique(y$STATE_CODE)
z <- y[(y$MAX.VALUE >= 0.065 | y$NUM.DAILY.OBS >= 18), ]
z <- y[(y$VALUE >= 0.065 | y$COUNT >= 18), ]
unique(z$STATE_CODE)
y$VALUE >= 0.065 | y$COUNT >= 18
unique(y$VALUE >= 0.065 | y$COUNT >= 18)
View(y[(is.na(y$VALUE >= 0.065 | y$COUNT >= 18), ])
View(y[is.na(y$VALUE >= 0.065 | y$COUNT >= 18), ])
y <- y[!is.na(y$VALUE), ]
y <- y[(y$VALUE >= 0.065 | y$COUNT >= 18), ]
unqiue(y$STATE_CODE)
unique(y$STATE_CODE)
library(data.table)
raw_data_file <- "C:/R/o3exceedData/ozone.txt"
y <- read.csv(raw_data_file, comment.char = "", stringsAsFactors = FALSE)
y <- y[seq(nrow(y)-1), ]
colnames(y)[1] <- "STATE.CODE"
y <- y[, c("STATE.CODE", "COUNTY.CODE", "SITE.ID", "POC", "COLLECTION.DATE", "NUM.DAILY.OBS", "MAX.VALUE")]
colnames(y) <- c("STATE_CODE", "COUNTY_CODE", "SITE_ID", "POC", "DATE", "COUNT", "VALUE")
y$STATE_CODE <- as.numeric(y$STATE_CODE)
y <- y[!is.na(y$VALUE), ]
y <- y[(y$VALUE >= 0.065 | y$COUNT >= 18), ]
y$DATE <- as.Date(as.character(y$DATE), format= "%Y%m%d")
y$YEAR <- as.numeric(format(y$DATE, "%Y"))
y$MONTH <- as.numeric(format(y$DATE, "%m"))
y$DAY <- as.numeric(format(y$DATE, "%m%d"))
readings <- as.data.table(y)
setkey(readings, STATE_CODE, DAY)
save(readings, file = "data/readings.rda")
load("data/states.rda")
load("data/readings.rda")
shiny::runApp()
x <- readings[readings$STATE_CODE = 45, ]
x <- readings[readings$STATE_CODE == 45, ]
x <- readings[readings$YEAR >= 2012, ]
x <- readings[readings$STATE_CODE == 45, ]
x <- x[x$YEAR >= 2012, ]
min(x$DAY)
e <- x[x$VALUE >= 0.075, ]
View(e)
shiny::runApp()
shinyapps:deployApp()
shinyapps::deployApp()
load("data/readings.rda")
load("data/readings.rda")
test <- function(startDate, seasonLength, standard, data) {
endDate <- startDate + seasonLength
sub <- data[data$DAY >= startDate & data$DAY <= endDate, ]
return(sum(sub$VALUE > std))
}
test(as.Date("2004-06-24"), 14, 0.075, readings)
test <- function(startDate, seasonLength, standard, data) {
endDate <- startDate + seasonLength
sub <- data[data$DAY >= startDate & data$DAY <= endDate, ]
return(sum(sub$VALUE > standard))
}
test(as.Date("2004-06-24"), 14, 0.075, readings)
test <- function(startDate, seasonLength, standard, data) {
endDate <- startDate + seasonLength
s <- as.numeric(format(startDate, "%m%d"))
e <- as.numeric(format(endDate, "%m%d"))
sub <- data[data$DAY >= s & data$DAY <= e, ]
return(sum(sub$VALUE > standard))
}
test(as.Date("2004-06-24"), 14, 0.075, readings)
load("data/readings.rda")
test <- function(startDate, seasonLength, standard, data) {
endDate <- startDate + seasonLength
s <- as.numeric(format(startDate, "%m%d"))
e <- as.numeric(format(endDate, "%m%d"))
sub <- data[data$DAY >= s & data$DAY <= e, ]
return(sum(sub$VALUE > standard))
}
test(as.Date("2004-06-24"), 14, 0.075, readings)
test <- function(startDate, seasonLength, standard, data) {
endDate <- startDate + (seasonLength - 1)
s <- as.numeric(format(startDate, "%m%d"))
e <- as.numeric(format(endDate, "%m%d"))
sub <- data[data$DAY >= s & data$DAY <= e, ]
return(sum(sub$VALUE > standard))
}
test(as.Date("2004-06-24"), 14, 0.075, readings)
test <- function(startDate, seasonLength, standard, data) {
endDate <- startDate + (seasonLength - 1)
s <- as.numeric(format(startDate, "%m%d"))
e <- as.numeric(format(endDate, "%m%d"))
sub <- data[data$DAY >= s & data$DAY <= e, ]
return(sum(sub$VALUE >= standard))
}
test(as.Date("2004-06-24"), 14, 0.075, readings)
shiny::runApp()
test(as.Date("2004-06-20"), 14, 0.075, readings)
test <- function(startDate, seasonLength, standard, data) {
endDate <- startDate + (seasonLength - 1)
s <- as.numeric(format(startDate, "%m%d"))
e <- as.numeric(format(endDate, "%m%d"))
sub <- data[data$DAY >= s & data$DAY <= e, ]
return(sum(sub$VALUE > standard))
}
test(as.Date("2004-06-20"), 14, 0.075, readings)
shiny::runApp()
test <- function(startDate, seasonLength, standard, data) {
endDate <- startDate + (seasonLength - 1)
s <- as.numeric(format(startDate, "%m%d"))
e <- as.numeric(format(endDate, "%m%d"))
sub <- data[data$DAY >= s & data$DAY <= e, ]
return(sum(sub$VALUE > standard))
}
test(as.Date("2005-06-20"), 14, 0.075, readings)
test <- function(startDate, seasonLength, standard, data) {
endDate <- startDate + (seasonLength - 1)
s <- as.numeric(format(startDate, "%m%d"))
e <- as.numeric(format(endDate, "%m%d"))
sub <- data[data$DAY >= s & data$DAY <= e, ]
return(sum(sub$VALUE > standard))
}
test(as.Date("2012-06-20"), 14, 0.075, readings)
test(as.Date("2023-06-20"), 14, 0.075, readings)
optim(as.Date("2004-03-01"), test(), seasonLength = 14, standard = 0.075, data = readings)
optim(par = list(startDate = as.Date("2004-03-01")), test(), seasonLength = 14, standard = 0.075, data = readings)
load("data/readings.rda")
test <- function(startDate, seasonLength, standard, data) {
endDate <- startDate + (seasonLength - 1)
s <- as.numeric(format(startDate, "%m%d"))
e <- as.numeric(format(endDate, "%m%d"))
sub <- data[data$DAY >= s & data$DAY <= e, ]
return(-sum(sub$VALUE > standard))
}
test(as.Date("2023-06-20"), 14, 0.075, readings)
optim(par = list(startDate = as.Date("2004-03-01")), test(), seasonLength = 14, standard = 0.075, data = readings)
optim(par = list(startDate = as.Date("2004-03-01")), method = "Brent", test(), seasonLength = 14, standard = 0.075, data = readings)
optim(par = list(startDate = as.Date("2004-03-01")), method = "Brent", test(), lower = as.Date("2004-03-01"), upper = as.Date("2004-10-31"), seasonLength = 14, standard = 0.075, data = readings)
optim(par = as.Date("2004-03-01"), method = "Brent", test(), lower = as.Date("2004-03-01"), upper = as.Date("2004-10-31"), seasonLength = 14, standard = 0.075, data = readings)
test <- function(x, seasonLength, standard, data) {
endDate <- x + (seasonLength - 1)
s <- as.numeric(format(x, "%m%d"))
e <- as.numeric(format(endDate, "%m%d"))
sub <- data[data$DAY >= s & data$DAY <= e, ]
return(-sum(sub$VALUE > standard))
}
test(as.Date("2023-06-20"), 14, 0.075, readings)
optim(par = as.Date("2004-03-01"), method = "Brent", test(), lower = as.Date("2004-03-01"), upper = as.Date("2004-10-31"), seasonLength = 14, standard = 0.075, data = readings)
optim(as.Date("2004-03-01"), method = "Brent", test(), lower = as.Date("2004-03-01"), upper = as.Date("2004-10-31"), seasonLength = 14, standard = 0.075, data = readings)
optim(par = as.Date("2004-03-01"), method = "Brent", test(), lower = as.Date("2004-03-01"), upper = as.Date("2004-10-31"), seasonLength = 14, standard = 0.075, data = readings)
test <- function(par, seasonLength, standard, data) {
endDate <- par + (seasonLength - 1)
s <- as.numeric(format(par, "%m%d"))
e <- as.numeric(format(endDate, "%m%d"))
sub <- data[data$DAY >= s & data$DAY <= e, ]
return(-sum(sub$VALUE > standard))
}
optim(par = as.Date("2004-03-01"), method = "Brent", test(), lower = as.Date("2004-03-01"), upper = as.Date("2004-10-31"), seasonLength = 14, standard = 0.075, data = readings)
seasonLength = 14
data = readings
standard = 0.075
test(as.Date("2023-06-20"))
load("data/readings.rda")
seasonLength = 14
data = readings
standard = 0.075
test <- function(x) {
endDate <- x + (seasonLength - 1)
s <- as.numeric(format(x, "%m%d"))
e <- as.numeric(format(endDate, "%m%d"))
sub <- data[data$DAY >= s & data$DAY <= e, ]
return(-sum(sub$VALUE > standard))
}
test(as.Date("2023-06-20"))
load("data/readings.rda")
test <- function(par, seasonLength, standard, data) {
endDate <- par + (seasonLength - 1)
s <- as.numeric(format(par, "%m%d"))
e <- as.numeric(format(endDate, "%m%d"))
sub <- data[data$DAY >= s & data$DAY <= e, ]
return(-sum(sub$VALUE > standard))
}
test(as.Date("2023-06-20"), 14, 0.075, readings)
optim(as.Date("2004-03-01"), method = "Brent", test, lower = as.Date("2004-03-01"), upper = as.Date("2004-10-31"), seasonLength = 14, standard = 0.075, data = readings)
optimize(test, c(as.Date("2004-03-01"), as.Date("2004-10-31")), seasonLength = 14, standard = 0.075, data = readings, maximum = TRUE)
load("data/readings.rda")
test <- function(par, seasonLength, standard, data) {
startDate = try(as.Date(paste0("2004", par), "%Y%m%d"), silent = TRUE)
endDate <- startDate + (seasonLength - 1)
s <- as.numeric(format(startDate, "%m%d"))
e <- as.numeric(format(endDate, "%m%d"))
sub <- data[data$DAY >= s & data$DAY <= e, ]
return(sum(sub$VALUE > standard))
}
test(620, 14, 0.075, readings)
par = 620
startDate = try(as.Date(paste0("2004", par), "%Y%m%d"), silent = TRUE)
startDate
paste0("2004", par)
sprintf("2004%04i", par)
par = 1031
sprintf("2004%04i", par)
par=620
load("data/readings.rda")
test <- function(par, seasonLength, standard, data) {
startDate = try(as.Date(sprintf("2004%04i", par), "%Y%m%d"), silent = TRUE)
endDate <- startDate + (seasonLength - 1)
s <- as.numeric(format(startDate, "%m%d"))
e <- as.numeric(format(endDate, "%m%d"))
sub <- data[data$DAY >= s & data$DAY <= e, ]
return(sum(sub$VALUE > standard))
}
test(620, 14, 0.075, readings)
optim(301, method = "Brent", test, lower = as.Date("2004-03-01"), upper = as.Date("2004-10-31"), seasonLength = 14, standard = 0.075, data = readings)
load("data/readings.rda")
test <- function(par, seasonLength, standard, data) {
startDate = try(as.Date(sprintf("2004%04i", par), "%Y%m%d"), silent = TRUE)
endDate <- startDate + (seasonLength - 1)
startDate <<- startDate
s <- as.numeric(format(startDate, "%m%d"))
e <- as.numeric(format(endDate, "%m%d"))
sub <- data[data$DAY >= s & data$DAY <= e, ]
return(sum(sub$VALUE > standard))
}
test(620, 14, 0.075, readings)
optim(301, method = "Brent", test, lower = as.Date("2004-03-01"), upper = as.Date("2004-10-31"), seasonLength = 14, standard = 0.075, data = readings)
startDate = try(as.Date(sprintf("2004%04i", par), "%Y%m%d"), silent = TRUE)
endDate <- startDate + (seasonLength - 1)
startDate <<- startDate
s <- as.numeric(format(startDate, "%m%d"))
e <- as.numeric(format(endDate, "%m%d"))
sub <- data[data$DAY >= s & data$DAY <= e, ]
sum(sub$VALUE > standard)
sum(sub$VALUE > standard)
sub <- data[data$DAY >= s & data$DAY <= e, ]
optimize(test, c(301, 1031), seasonLength = 14, standard = 0.075, data = readings, maximum = TRUE)
load("data/readings.rda")
test <- function(par, seasonLength, standard, data) {
try(startDate <- as.Date(sprintf("2004%04i", par), "%Y%m%d"), silent = TRUE)
endDate <- startDate + (seasonLength - 1)
startDate <<- startDate
s <- as.numeric(format(startDate, "%m%d"))
e <- as.numeric(format(endDate, "%m%d"))
sub <- data[data$DAY >= s & data$DAY <= e, ]
return(sum(sub$VALUE > standard))
}
test(620, 14, 0.075, readings)
optimize(test, c(301, 1031), seasonLength = 14, standard = 0.075, data = readings, maximum = TRUE)
optim(301, method = "Brent", test, lower = as.Date("2004-03-01"), upper = as.Date("2004-10-31"), seasonLength = 14, standard = 0.075, data = readings)
optim(301, method = "Brent", test, lower = 301, upper = 1031, seasonLength = 14, standard = 0.075, data = readings)
test <- function(par, seasonLength, standard, data) {
try(startDate <- as.Date(sprintf("2004%04i", par), "%Y%m%d"), silent = TRUE)
endDate <- startDate + (seasonLength - 1)
startDate <<- startDate
s <- as.numeric(format(startDate, "%m%d"))
e <- as.numeric(format(endDate, "%m%d"))
sub <- data[data$DAY >= s & data$DAY <= e, ]
return(-sum(sub$VALUE > standard))
}
test(620, 14, 0.075, readings)
optim(301, method = "Brent", test, lower = 301, upper = 1031, seasonLength = 14, standard = 0.075, data = readings)
test(1031, 14, 0.075, readings)
test(620, 14, 0.075, readings)
test <- function(par, seasonLength, standard, data) {
try(startDate <- as.Date(sprintf("2004%04i", par), "%Y%m%d"), silent = TRUE)
endDate <- startDate + (seasonLength - 1)
startDate <<- startDate
s <- as.numeric(format(startDate, "%m%d"))
e <- as.numeric(format(endDate, "%m%d"))
sub <- data[data$DAY >= s & data$DAY <= e, ]
return(sum(sub$VALUE > standard))
}
optim(301, method = "Brent", test, lower = 301, upper = 1031, seasonLength = 14, standard = 0.075, data = readings, control = list(fnscale = -1))
load("data/readings.rda")
test <- function(par, seasonLength, standard, data) {
try(startDate <- as.Date(sprintf("2004%04i", par), "%Y%m%d"), silent = TRUE)
endDate <- startDate + (seasonLength - 1)
startDate <<- startDate
s <- as.numeric(format(startDate, "%m%d"))
e <- as.numeric(format(endDate, "%m%d"))
sub <- data[data$DAY >= s & data$DAY <= e, ]
return(sum(sub$VALUE > standard))
}
test(620, 14, 0.075, readings)
optim(301, method = "Brent", test, lower = 301, upper = 1031, seasonLength = 14, standard = 0.075, data = readings, control = list(fnscale = -1))
load("data/readings.rda")
test <- function(par, seasonLength, standard, data) {
try(startDate <- as.Date(sprintf("2004%04i", par), "%Y%m%d"), silent = TRUE)
endDate <- startDate + (seasonLength - 1)
s <- as.numeric(format(startDate, "%m%d"))
e <- as.numeric(format(endDate, "%m%d"))
sub <- data[data$DAY >= s & data$DAY <= e, ]
return(sum(sub$VALUE > standard))
}
optim(301, method = "Brent", test, lower = 301, upper = 1031, seasonLength = 14, standard = 0.075, data = readings, control = list(fnscale = -1))
load("data/readings.rda")
test <- function(par, seasonLength, standard, data) {
startDate <- try(as.Date(sprintf("2004%04i", par), "%Y%m%d"), silent = TRUE)
endDate <- startDate + (seasonLength - 1)
s <- as.numeric(format(startDate, "%m%d"))
e <- as.numeric(format(endDate, "%m%d"))
sub <- data[data$DAY >= s & data$DAY <= e, ]
return(sum(sub$VALUE > standard))
}
optim(301, method = "Brent", test, lower = 301, upper = 1031, seasonLength = 14, standard = 0.075, data = readings, control = list(fnscale = -1))
test <- function(par, seasonLength, standard, data) {
startDate <- try(as.Date(sprintf("2004%04i", par), "%Y%m%d"), silent = TRUE)
if(!is.na(startDate)) {
endDate <- startDate + (seasonLength - 1)
s <- as.numeric(format(startDate, "%m%d"))
e <- as.numeric(format(endDate, "%m%d"))
sub <- data[data$DAY >= s & data$DAY <= e, ]
return(sum(sub$VALUE > standard))
} else {
return(Inf)
}
}
optim(301, method = "Brent", test, lower = 301, upper = 1031, seasonLength = 14, standard = 0.075, data = readings, control = list(fnscale = -1))
test <- function(par, seasonLength, standard, data) {
startDate <- try(as.Date(sprintf("2004%04i", par), "%Y%m%d"), silent = TRUE)
print(startDate)
if(!is.na(startDate)) {
endDate <- startDate + (seasonLength - 1)
s <- as.numeric(format(startDate, "%m%d"))
e <- as.numeric(format(endDate, "%m%d"))
sub <- data[data$DAY >= s & data$DAY <= e, ]
return(sum(sub$VALUE > standard))
} else {
return(Inf)
}
}
optim(301, method = "Brent", test, lower = 301, upper = 1031, seasonLength = 14, standard = 0.075, data = readings, control = list(fnscale = -1))
test <- function(par, seasonLength, standard, data) {
startDate <- try(as.Date(sprintf("2004%04i", par), "%Y%m%d"), silent = TRUE)
print(startDate)
if(!is.error(startDate)) {
endDate <- startDate + (seasonLength - 1)
s <- as.numeric(format(startDate, "%m%d"))
e <- as.numeric(format(endDate, "%m%d"))
sub <- data[data$DAY >= s & data$DAY <= e, ]
return(sum(sub$VALUE > standard))
} else {
return(Inf)
}
}
optim(301, method = "Brent", test, lower = 301, upper = 1031, seasonLength = 14, standard = 0.075, data = readings, control = list(fnscale = -1))
test <- function(par, seasonLength, standard, data) {
startDate <- try(as.Date(sprintf("2004%04i", par), "%Y%m%d"), silent = TRUE)
print(startDate)
if(class(startDate) != "try-error") {
endDate <- startDate + (seasonLength - 1)
s <- as.numeric(format(startDate, "%m%d"))
e <- as.numeric(format(endDate, "%m%d"))
sub <- data[data$DAY >= s & data$DAY <= e, ]
return(sum(sub$VALUE > standard))
} else {
return(Inf)
}
}
optim(301, method = "Brent", test, lower = 301, upper = 1031, seasonLength = 14, standard = 0.075, data = readings, control = list(fnscale = -1))
test <- function(par, seasonLength, standard, data) {
startDate <- try(as.Date(sprintf("2004%04i", par), "%Y%m%d"), silent = TRUE)
print(par)
if(class(startDate) != "try-error") {
endDate <- startDate + (seasonLength - 1)
s <- as.numeric(format(startDate, "%m%d"))
e <- as.numeric(format(endDate, "%m%d"))
sub <- data[data$DAY >= s & data$DAY <= e, ]
return(sum(sub$VALUE > standard))
} else {
return(Inf)
}
}
optim(301, method = "Brent", test, lower = 301, upper = 1031, seasonLength = 14, standard = 0.075, data = readings, control = list(fnscale = -1))
install.packages("nloptr")
library("nloptr", lib.loc="C:/Program Files/R/R-3.1.2/library")
nloptr(301, test, seasonLength = 14, standard = 0.075, data = readings)
nloptr(301, test, seasonLength = 14, standard = 0.075, data = readings, opts = list(algorithm = "NLOPT_GN_DIRECT"))
